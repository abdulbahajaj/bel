(set mac
    (lit mac
        (lit clo scope (name args body)
            `(set ,name
                (lit mac
                    (lit clo scope ,args ,body))))))


(mac fn (args body)
        `(lit clo ,scope ,args ,body))

;; (mac fn (args body)
;;      `(lit clo ,scope ,args (do ,@body)))

(mac def (name args body)
    `(set ,name (fn ,args ,body)))


;; (mac apply (fn args)
;;      (if (> (len args) `(,fn (cons ,@args ())))
;;          `(,fn ,@args)))

(def add-one (a)
  (prn a)
  (fn () a))



(def my-test () (do (prn 1010) (prn 2020)))

(def my-test2 () (prn 3030))
(def my-test3 () 4040)

(my-test)
(my-test2)
(prn (id 4040 (my-test3)))
